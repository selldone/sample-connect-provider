<?php

namespace App\Http\Controllers;


use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
use Illuminate\Foundation\Bus\DispatchesJobs;
use Illuminate\Foundation\Validation\ValidatesRequests;
use Illuminate\Http\Request;

class AuthorizationController extends Controller
{
    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;


    public function login(Request $request)
    {
        $state = $request->input('state');
        if (!$state) return response(view('error', ['error' => "Missing <b>state</b> in the query parameters!", 'message' => "Login url must contain state query. This query will be generated by Selldone."]), 401);

        return view('login', compact('state'));

    }


    public function accept(Request $request)
    {

        $state = $request->input('state');

        return redirect(config('selldone.provider-return-url') . "?state=$state&code=" . self::SAMPLE_AUTHENTICATION_CODE);
    }


    public function reject(Request $request)
    {
        $state = $request->input('state');

        return redirect(config('selldone.provider-return-url') . "?state=$state");
    }


    public function token(Request $request)
    {

        $grant_type = $request->input('grant_type');
        $client_id = $request->input('client_id');
        $client_secret = $request->input('client_secret');
        $code = $request->input('code');

        if ($grant_type !== 'authorization_code') return response(['error' => true, 'error_msg' => 'Invalid grant type!'], 401);

        if ($client_id != self::CLIENT_ID || $client_secret !== self::CLIENT_SECRET) return response(['error' => true, 'error_msg' => 'Invalid client!'], 401);

        if ($code !== self::SAMPLE_AUTHENTICATION_CODE) return response(['error' => true, 'error_msg' => 'Invalid authorization code!'], 401);


        return ['access_token' => self::SAMPLE_ACCESS_TOKEN, 'refresh_token' => null, 'expires_at' => \Illuminate\Support\Carbon::now()->addYear(), 'token_type' => 'Bearer'];
    }


}
